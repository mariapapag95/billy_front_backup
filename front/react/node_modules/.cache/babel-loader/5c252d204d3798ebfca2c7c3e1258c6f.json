{"ast":null,"code":"var _jsxFileName = \"/Users/admin/billy/front/react/src/components/Dash.js\";\nimport React from 'react';\nimport Post from './Post';\nimport Nav from './Nav'; // import PayForm from './PayForm'\n\nimport PostForm from './PostForm';\nconst url = \"http://127.0.0.1:5000/api/\";\nexport default class Dash extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAll = () => {\n      fetch(url + 'all').then(blob => blob.json()).then(json => {\n        let allPosts = json;\n        this.setState({\n          allPosts: allPosts\n        });\n      }).then(fetch(\"https://connect.stripe.com/oauth/token\"));\n    };\n\n    this.state = {\n      allPosts: [],\n      payForm: false,\n      postForm: false,\n      amountPaid: undefined,\n      note: '',\n      id: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAll();\n  }\n\n  pay(id) {\n    console.log(\"pay function fired with this id::\", id);\n    fetch(url + \"bills/\".concat(id)).then(blob => blob.json()).then(json => {\n      let bill = json;\n      this.setState({\n        allPosts: [bill],\n        payForm: true,\n        id: id\n      });\n      console.log(\"this is BILL in pay(id)\", this.state.allPosts);\n    }).then(0);\n  }\n\n  payBill() {\n    let post = {\n      'amountPaid': this.state.amountPaid,\n      'note': this.state.note\n    };\n    fetch(url + \"bills/\".concat(this.state.id, \"/pay\"), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(post),\n      mode: \"cors\",\n      method: \"post\"\n    });\n  }\n\n  handleInput() {\n    this.setState({\n      amountPaid: document.getElementById('amountPaid').value,\n      note: document.getElementById('note').value\n    }, () => this.payBill());\n  }\n\n  like(id) {\n    console.log(\"LIKE button pressed with this id::\", id);\n  }\n\n  makePost() {\n    this.setState({\n      postForm: !this.state.postForm\n    });\n  }\n\n  test() {\n    console.log(\"this is a test\");\n  } // pay(e) {\n  //     let billAmount = e.target.value\n  //     console.log(billAmount)\n  //     onClick={e => this.pay(e, \"value\")}\n  // }\n\n\n  render() {\n    let posts = this.state.allPosts.map((element, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Post, {\n        total: element.total_due || element.amount_paid,\n        user: element.due_by || element.paid_by,\n        company: element.due_to || element.paid_to,\n        time: element.created_on,\n        text: element.caption || element.note,\n        key: i,\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: element.bill_id || element.payment_id,\n        className: element.bill_id === undefined ? \"likebutton\" : \"paybutton\",\n        onClick: () => {\n          element.total_due === undefined ? this.like(element.payment_id) : this.pay(element.bill_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, element.bill_id === undefined ? \"LIKE\" : \"PAY\"));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"test\",\n      onClick: () => {\n        this.makePost();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"POST YOUR BILL\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(PostForm, {\n      hidden: this.state.postForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, posts), React.createElement(\"div\", {\n      className: \"makepost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      id: \"amountPaid\",\n      placeholder: \"Enter $ amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input\",\n      id: \"note\",\n      placeholder: \"add note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"test\",\n      type: \"submit\",\n      onClick: () => {\n        this.handleInput();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"PAY\")))) // <div className=\"box\">\n    // <Form className=\"box\">\n    // <Form.Group controlId=\"formBasicEmail\">\n    //     <Form.Label>Email address</Form.Label>\n    //     <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    //     <Form.Text className=\"text-muted\">\n    //     We'll never share your email with anyone else.\n    //     </Form.Text>\n    // </Form.Group>\n    // <Form.Group controlId=\"formBasicPassword\">\n    //     <Form.Label>Password</Form.Label>\n    //     <Form.Control type=\"password\" placeholder=\"Password\" />\n    // </Form.Group>\n    // <Form.Group controlId=\"formBasicChecbox\">\n    //     <Form.Check type=\"checkbox\" label=\"Check me out\" />\n    // </Form.Group>\n    // <Button variant=\"primary\" type=\"submit\">\n    //     Submit\n    // </Button>\n    // </Form>\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/billy/front/react/src/components/Dash.js"],"names":["React","Post","Nav","PostForm","url","Dash","Component","constructor","props","fetchAll","fetch","then","blob","json","allPosts","setState","state","payForm","postForm","amountPaid","undefined","note","id","componentDidMount","pay","console","log","bill","payBill","post","headers","body","JSON","stringify","mode","method","handleInput","document","getElementById","value","like","makePost","test","render","posts","map","element","i","total_due","amount_paid","due_by","paid_by","due_to","paid_to","created_on","caption","fontWeight","bill_id","payment_id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Post from './Post'\nimport Nav  from './Nav'\n// import PayForm from './PayForm'\nimport PostForm from './PostForm';\n\nconst url = `http://127.0.0.1:5000/api/`\n\nexport default class Dash extends React.Component {\n    constructor(props){\n    super(props)\n    this.state = {\n        allPosts: [],\n        payForm: false,\n        postForm: false,\n        amountPaid: undefined,\n        note: '',\n        id: undefined,\n    }\n}\n\n    fetchAll = () => {\n        fetch(url+'all')\n        .then (blob => blob.json()).then(json => {\n            let allPosts = json\n            this.setState({allPosts : allPosts})\n            })\n        .then (\n            fetch (\"https://connect.stripe.com/oauth/token\")\n        )\n    }\n\n    componentDidMount() {\n        this.fetchAll()\n    }\n\n    pay(id) {\n        console.log(\"pay function fired with this id::\", id)\n        fetch (url+`bills/${id}`)\n        .then (blob => blob.json()).then(json => {\n            let bill = json\n            this.setState({allPosts : [bill], payForm : true, id : id})\n            console.log(\"this is BILL in pay(id)\", this.state.allPosts)\n        }).then(0)\n    }\n        \n    payBill() {\n            let post = {\n            'amountPaid': this.state.amountPaid, \n            'note': this.state.note,}\n        fetch (url+`bills/${this.state.id}/pay`, {\n            headers: {\"Content-Type\" : \"application/json\"}, \n            body: JSON.stringify(post),\n            mode:\"cors\",\n            method:\"post\"\n        })\n    }\n\n    handleInput() {\n        this.setState({\n            amountPaid: document.getElementById('amountPaid').value,\n            note: document.getElementById('note').value\n        }, ()=>this.payBill())\n    }\n\n    like(id) {\n        console.log(\"LIKE button pressed with this id::\", id)\n    }\n\n    makePost() {\n        this.setState({postForm : !this.state.postForm})\n    }\n\n    test() {\n        console.log(\"this is a test\")\n    }\n\n    // pay(e) {\n    //     let billAmount = e.target.value\n    //     console.log(billAmount)\n\n    //     onClick={e => this.pay(e, \"value\")}\n    // }\n\n    render () {\n        let posts = this.state.allPosts.map((element, i) => {\n            return <div key={i}>\n            <Post \n            total={element.total_due || element.amount_paid} \n            user={element.due_by || element.paid_by}\n            company={element.due_to || element.paid_to}\n            time={element.created_on}\n            text={element.caption || element.note}\n            key={i}\n            style={{fontWeight :'bold'}}/>\n            <button \n            id={element.bill_id || element.payment_id} \n            className={element.bill_id === undefined ? \"likebutton\" : \"paybutton\"} \n            onClick={()=>{element.total_due === undefined ? this.like(element.payment_id) : this.pay(element.bill_id)}}>\n            {element.bill_id === undefined ? \"LIKE\" : \"PAY\"}\n            </button>\n            </div>\n        })\n        return (\n            <div>\n                <div>\n                <Nav/>\n                </div>\n                {/* <button className=\"test\" onClick={()=>{this.test()}}>\n                    test\n                </button> */}\n                <button \n                className=\"test\"\n                onClick={()=>{this.makePost()}}>\n                {\"POST YOUR BILL\"}\n                </button>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <PostForm hidden={this.state.postForm}/>\n                <div>{posts}</div>\n                <div className='makepost'>\n                <form>\n                    <input \n                    className='input'\n                    id='amountPaid'\n                    placeholder='Enter $ amount'>\n                    </input>\n                    <input \n                    className='input'\n                    id='note'\n                    placeholder='add note'>\n                    </input>\n                    <button \n                    className=\"test\"\n                    type=\"submit\"\n                    onClick={()=>{this.handleInput()}}>\n                    PAY\n                    </button>\n                </form>\n            </div>\n                {/* <PayForm hidden={this.state.payForm}/> */}\n            </div>\n            // <div className=\"box\">\n            // <Form className=\"box\">\n            // <Form.Group controlId=\"formBasicEmail\">\n            //     <Form.Label>Email address</Form.Label>\n            //     <Form.Control type=\"email\" placeholder=\"Enter email\" />\n            //     <Form.Text className=\"text-muted\">\n            //     We'll never share your email with anyone else.\n            //     </Form.Text>\n            // </Form.Group>\n\n            // <Form.Group controlId=\"formBasicPassword\">\n            //     <Form.Label>Password</Form.Label>\n            //     <Form.Control type=\"password\" placeholder=\"Password\" />\n            // </Form.Group>\n            // <Form.Group controlId=\"formBasicChecbox\">\n            //     <Form.Check type=\"checkbox\" label=\"Check me out\" />\n            // </Form.Group>\n            // <Button variant=\"primary\" type=\"submit\">\n            //     Submit\n            // </Button>\n            // </Form>\n            // </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}