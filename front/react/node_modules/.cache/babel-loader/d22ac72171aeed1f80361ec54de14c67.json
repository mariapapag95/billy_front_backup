{"ast":null,"code":"// Create a Stripe client.\nvar stripe = Stripe('pk_test_fnTlX6Yxon8HV5zItXcsllfV00h8gA0C0Q'); // Create an instance of Elements.\n\nvar elements = stripe.elements(); // Custom styling can be passed to options when creating an Element.\n// (Note that this demo uses a wider set of styles than the guide below.)\n\nvar style = {\n  base: {\n    color: '#32325d',\n    fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n    fontSmoothing: 'antialiased',\n    fontSize: '16px',\n    '::placeholder': {\n      color: '#aab7c4'\n    }\n  },\n  invalid: {\n    color: '#fa755a',\n    iconColor: '#fa755a'\n  }\n}; // Create an instance of the card Element.\n\nvar card = elements.create('card', {\n  style: style\n}); // Add an instance of the card Element into the `card-element` <div>.\n\ncard.mount('#card-element'); // Handle real-time validation errors from the card Element.\n\ncard.addEventListener('change', function (event) {\n  var displayError = document.getElementById('card-errors');\n\n  if (event.error) {\n    displayError.textContent = event.error.message;\n  } else {\n    displayError.textContent = '';\n  }\n}); // Handle form submission.\n\nvar form = document.getElementById('payment-form');\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n  stripe.createToken(card).then(function (result) {\n    if (result.error) {\n      // Inform the user if there was an error.\n      var errorElement = document.getElementById('card-errors');\n      errorElement.textContent = result.error.message;\n    } else {\n      // Send the token to your server.\n      stripeTokenHandler(result.token);\n    }\n  });\n}); // Submit the form with the token ID.\n\nfunction stripeTokenHandler(token) {\n  // Insert the token ID into the form so it gets submitted to the server\n  var form = document.getElementById('payment-form');\n  var hiddenInput = document.createElement('input');\n  hiddenInput.setAttribute('type', 'hidden');\n  hiddenInput.setAttribute('name', 'stripeToken');\n  hiddenInput.setAttribute('value', token.id);\n  form.appendChild(hiddenInput); // Submit the form\n\n  form.submit();\n}\n\nexport default stripeTokenHandler();","map":{"version":3,"sources":["/Users/admin/billy/front/react/src/components/CardEnter.js"],"names":["stripe","Stripe","elements","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","card","create","mount","addEventListener","event","displayError","document","getElementById","error","textContent","message","form","preventDefault","createToken","then","result","errorElement","stripeTokenHandler","token","hiddenInput","createElement","setAttribute","id","appendChild","submit"],"mappings":"AAAA;AACA,IAAIA,MAAM,GAAGC,MAAM,CAAC,4CAAD,CAAnB,C,CAEA;;AACA,IAAIC,QAAQ,GAAGF,MAAM,CAACE,QAAP,EAAf,C,CAEA;AACA;;AACA,IAAIC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,UAAU,EAAE,yCAFR;AAGJC,IAAAA,aAAa,EAAE,aAHX;AAIJC,IAAAA,QAAQ,EAAE,MAJN;AAKJ,qBAAiB;AACfH,MAAAA,KAAK,EAAE;AADQ;AALb,GADI;AAUVI,EAAAA,OAAO,EAAE;AACPJ,IAAAA,KAAK,EAAE,SADA;AAEPK,IAAAA,SAAS,EAAE;AAFJ;AAVC,CAAZ,C,CAgBA;;AACA,IAAIC,IAAI,GAAGT,QAAQ,CAACU,MAAT,CAAgB,MAAhB,EAAwB;AAACT,EAAAA,KAAK,EAAEA;AAAR,CAAxB,CAAX,C,CAEA;;AACAQ,IAAI,CAACE,KAAL,CAAW,eAAX,E,CAEA;;AACAF,IAAI,CAACG,gBAAL,CAAsB,QAAtB,EAAgC,UAASC,KAAT,EAAgB;AAC9C,MAAIC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;;AACA,MAAIH,KAAK,CAACI,KAAV,EAAiB;AACfH,IAAAA,YAAY,CAACI,WAAb,GAA2BL,KAAK,CAACI,KAAN,CAAYE,OAAvC;AACD,GAFD,MAEO;AACLL,IAAAA,YAAY,CAACI,WAAb,GAA2B,EAA3B;AACD;AACF,CAPD,E,CASA;;AACA,IAAIE,IAAI,GAAGL,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAX;AACAI,IAAI,CAACR,gBAAL,CAAsB,QAAtB,EAAgC,UAASC,KAAT,EAAgB;AAC9CA,EAAAA,KAAK,CAACQ,cAAN;AAEAvB,EAAAA,MAAM,CAACwB,WAAP,CAAmBb,IAAnB,EAAyBc,IAAzB,CAA8B,UAASC,MAAT,EAAiB;AAC7C,QAAIA,MAAM,CAACP,KAAX,EAAkB;AAChB;AACA,UAAIQ,YAAY,GAAGV,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;AACAS,MAAAA,YAAY,CAACP,WAAb,GAA2BM,MAAM,CAACP,KAAP,CAAaE,OAAxC;AACD,KAJD,MAIO;AACL;AACAO,MAAAA,kBAAkB,CAACF,MAAM,CAACG,KAAR,CAAlB;AACD;AACF,GATD;AAUD,CAbD,E,CAeA;;AACA,SAASD,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC;AACA,MAAIP,IAAI,GAAGL,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAX;AACA,MAAIY,WAAW,GAAGb,QAAQ,CAACc,aAAT,CAAuB,OAAvB,CAAlB;AACAD,EAAAA,WAAW,CAACE,YAAZ,CAAyB,MAAzB,EAAiC,QAAjC;AACAF,EAAAA,WAAW,CAACE,YAAZ,CAAyB,MAAzB,EAAiC,aAAjC;AACAF,EAAAA,WAAW,CAACE,YAAZ,CAAyB,OAAzB,EAAkCH,KAAK,CAACI,EAAxC;AACAX,EAAAA,IAAI,CAACY,WAAL,CAAiBJ,WAAjB,EAPiC,CASjC;;AACAR,EAAAA,IAAI,CAACa,MAAL;AACD;;AAED,eAAeP,kBAAkB,EAAjC","sourcesContent":["// Create a Stripe client.\nvar stripe = Stripe('pk_test_fnTlX6Yxon8HV5zItXcsllfV00h8gA0C0Q');\n\n// Create an instance of Elements.\nvar elements = stripe.elements();\n\n// Custom styling can be passed to options when creating an Element.\n// (Note that this demo uses a wider set of styles than the guide below.)\nvar style = {\n  base: {\n    color: '#32325d',\n    fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n    fontSmoothing: 'antialiased',\n    fontSize: '16px',\n    '::placeholder': {\n      color: '#aab7c4'\n    }\n  },\n  invalid: {\n    color: '#fa755a',\n    iconColor: '#fa755a'\n  }\n};\n\n// Create an instance of the card Element.\nvar card = elements.create('card', {style: style});\n\n// Add an instance of the card Element into the `card-element` <div>.\ncard.mount('#card-element');\n\n// Handle real-time validation errors from the card Element.\ncard.addEventListener('change', function(event) {\n  var displayError = document.getElementById('card-errors');\n  if (event.error) {\n    displayError.textContent = event.error.message;\n  } else {\n    displayError.textContent = '';\n  }\n});\n\n// Handle form submission.\nvar form = document.getElementById('payment-form');\nform.addEventListener('submit', function(event) {\n  event.preventDefault();\n\n  stripe.createToken(card).then(function(result) {\n    if (result.error) {\n      // Inform the user if there was an error.\n      var errorElement = document.getElementById('card-errors');\n      errorElement.textContent = result.error.message;\n    } else {\n      // Send the token to your server.\n      stripeTokenHandler(result.token);\n    }\n  });\n});\n\n// Submit the form with the token ID.\nfunction stripeTokenHandler(token) {\n  // Insert the token ID into the form so it gets submitted to the server\n  var form = document.getElementById('payment-form');\n  var hiddenInput = document.createElement('input');\n  hiddenInput.setAttribute('type', 'hidden');\n  hiddenInput.setAttribute('name', 'stripeToken');\n  hiddenInput.setAttribute('value', token.id);\n  form.appendChild(hiddenInput);\n\n  // Submit the form\n  form.submit();\n}\n\nexport default stripeTokenHandler()"]},"metadata":{},"sourceType":"module"}